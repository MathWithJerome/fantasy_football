library(readr)
adp.read.l = adp.ppr.l = list()
for (y in 2015:2019) {
  adp.read.l[[as.character(y)]] = read_csv(paste0(
    "C:/Users/Jerome/Desktop/FantasyData/ADP/fantasy-football-adp-rankings-",y,".csv"))
  adp.read.l[[as.character(y)]]$year = y
  adp.ppr.l[[as.character(y)]] = read_csv(paste0(
    "C:/Users/Jerome/Desktop/FantasyData/ADP/fantasy-football-ppr-adp-rankings-",y,".csv"))
  adp.ppr.l[[as.character(y)]]$year = y
}
adp.read = do.call(rbind,adp.read.l)
adp.ppr = do.call(rbind,adp.ppr.l)
names(adp.ppr)[c(1,8)] = paste0(names(adp.ppr)[c(1,8)],"PPR")
adp.read = merge(adp.read, adp.ppr)

adp.read$Age = as.numeric(as.character(adp.read$Age))
adp.read$Pos = as.character(adp.read$Position)
adp.read$Pos[which(adp.read$Position=="FB")] = "RB"
adp.read = adp.read[which(!adp.read$Position=="DE"),]
adp.col = names(adp)[c(7,16:19)]

adp = adp.read[which(adp.read$AverageDraftPosition <= 200),]
adp$pos.scale = adp$pos.rank = adp$adp.rank = adp$pos.scale.ppr = adp$pos.rank.ppr = adp$adp.rank.ppr = adp$adp.rank.bin = adp$adp.rank.bin.ppr = NA

for (y in unique(adp$year)) {
  for (p in c("QB","RB","WR","TE","K","DST")) {
    adp$pos.scale[which(adp$Pos==p & adp$year==y)] = scale(adp$FantasyPoints[which(adp$Pos==p & adp$year==y)])
    adp$pos.rank[which(adp$Pos==p & adp$year==y)] = rank(-adp$FantasyPoints[which(adp$Pos==p & adp$year==y)])
    adp$adp.rank[which(adp$Pos==p & adp$year==y)] = rank(adp$AverageDraftPosition[which(adp$Pos==p & adp$year==y)])
    adp$pos.scale.ppr[which(adp$Pos==p & adp$year==y)] = scale(adp$FantasyPointsPPR[which(adp$Pos==p & adp$year==y)])
    adp$pos.rank.ppr[which(adp$Pos==p & adp$year==y)] = rank(-adp$FantasyPointsPPR[which(adp$Pos==p & adp$year==y)])
    adp$adp.rank.ppr[which(adp$Pos==p & adp$year==y)] = rank(adp$AverageDraftPositionPPR[which(adp$Pos==p & adp$year==y)])
    #adp$scale.rank = rank(-adp$pos.scale)
    #adp$scale.rank.ppr = rank(-adp$pos.scale.ppr)
    }
}
b = 10
adp$pos.rank.bin = as.character(cut(adp$pos.rank, breaks = seq(from = 1, to = max(adp$pos.rank), by = b), right = FALSE))
adp$pos.bin.mod = (adp$pos.rank + b - 1) %% b + 1
adp$adp.rank.bin = as.character(cut(adp$adp.rank, breaks = seq(from = 1, to = max(adp$adp.rank), by = b), right = FALSE))
adp$adp.bin.mod = (adp$adp.rank + b - 1) %% b + 1
adp.rebin = c("1 to 6", "7 to 12", "13 to 18")
adp.rebin2 = c("1 to 12", "13 to 24", "25 to 36","37 to 48")
adp$adp.rank.bin[which(adp$Pos %in% c("QB","TE"))] = as.character(cut(adp$adp.rank[which(adp$Pos %in% c("QB","TE"))], 
                                                                        breaks = seq(from = 1, to = 25, by = 6), right = FALSE, 
                                                                        labels = c(adp.rebin,"19+")))
adp$adp.rank.bin[which(adp$Pos %in% c("K","DST"))] = as.character(cut(adp$adp.rank[which(adp$Pos %in% c("K","DST"))], 
                                                                      breaks = seq(from = 1, to = 25, by = 6), right = FALSE, 
                                                                      labels = c(adp.rebin,"19+")))
adp$adp.rank.bin[which(adp$Pos %in% c("RB","WR"))] = as.character(cut(adp$adp.rank[which(adp$Pos %in% c("RB","WR"))],
                                                                        breaks = seq(from = 1, to = 61, by = 12), right = FALSE, 
                                                                        labels = c(adp.rebin2,"49+")))
adp$adp.rank.bin = ifelse(adp$Pos %in% c("QB","TE") & is.na(adp$adp.rank.bin), "19+", adp$adp.rank.bin)
adp$adp.rank.bin = ifelse(adp$Pos %in% c("K","DST") & is.na(adp$adp.rank.bin), "19+", adp$adp.rank.bin)
adp$adp.rank.bin = ifelse(adp$Pos %in% c("WR","RB") & is.na(adp$adp.rank.bin), "49+", adp$adp.rank.bin)
adp$AverageDraftPosition[which(is.na(adp$AverageDraftPosition))] = "NA"
adp$adp.rank.bin.ppr[which(adp$Pos %in% c("QB","TE"))] = as.character(cut(adp$adp.rank.ppr[which(adp$Pos %in% c("QB","TE"))], 
                                                                      breaks = seq(from = 1, to = 25, by = 6), right = FALSE, 
                                                                      labels = c(adp.rebin,"19+")))
adp$adp.rank.bin.ppr[which(adp$Pos %in% c("K","DST"))] = as.character(cut(adp$adp.rank.ppr[which(adp$Pos %in% c("K","DST"))], 
                                                                          breaks = seq(from = 1, to = 25, by = 6), right = FALSE, 
                                                                          labels = c(adp.rebin,"19+")))
adp$adp.rank.bin.ppr[which(adp$Pos %in% c("RB","WR"))] = as.character(cut(adp$adp.rank.ppr[which(adp$Pos %in% c("RB","WR"))],
                                                                      breaks = seq(from = 1, to = 61, by = 12), right = FALSE, 
                                                                      labels = c(adp.rebin2,"49+")))
adp$adp.rank.bin.ppr = ifelse(adp$Pos %in% c("QB","TE") & is.na(adp$adp.rank.bin.ppr), "19+", adp$adp.rank.bin.ppr)
adp$adp.rank.bin.ppr = ifelse(adp$Pos %in% c("K","DST") & is.na(adp$adp.rank.bin.ppr), "19+", adp$adp.rank.bin.ppr)
adp$adp.rank.bin.ppr = ifelse(adp$Pos %in% c("WR","RB") & is.na(adp$adp.rank.bin.ppr), "49+", adp$adp.rank.bin.ppr)
adp$AverageDraftPositionPPR[which(is.na(adp$AverageDraftPositionPPR))] = "NA"

#### predictions ----
library(caret)
last.year = 2018
#View(adp[which(adp$year <= 2017),c("AverageDraftPosition","Pos","adp.rank")]) adp.rank.bin + 
test = merge(as.data.frame(aggregate(data = adp[which(adp$year <= last.year),], FantasyPoints ~ adp.rank.bin + Pos , FUN = median)),
      as.data.frame(aggregate(data = adp[which(adp$year <= last.year),], FantasyPoints ~ adp.rank.bin + Pos , FUN = mean)), by = c("adp.rank.bin", "Pos"))
adp.plot = as.data.frame(aggregate(data = adp[which(adp$year <= last.year),], FantasyPoints ~ adp.rank + Pos , FUN = median))
ggplot(data = adp.plot) + geom_col(aes(x = adp.rank, y = FantasyPoints, fill = Pos), size = 2) + facet_grid(Pos~.) + xlim(c(1,60))

testers = adp[which(adp$year <= last.year & adp$pos.rank <= 70 & !adp$adp.rank.bin %in% c("19+")),]
adp.lm.slope = lm(data = testers, FantasyPoints ~ adp.rank.bin * adp.bin.mod * Pos)
adp.lm = lm(data = testers, FantasyPoints ~ adp.rank.bin * Pos)
#adp.rf = train(data = adp[which(adp$year <= last.year),], FantasyPoints ~ adp.rank.bin * adp.bin.mod * Pos, method = "rf")
summary(adp.lm.slope)
pred.row = which(adp$year==last.year+1 & adp$pos.rank <= 70 & !adp$adp.rank.bin %in% c("19+"))
adp.2019.slope = data.frame(Player = adp$Name[pred.row], Pos = adp$Pos[pred.row], 
                      ADP = as.numeric(adp$AverageDraftPosition[pred.row]),
                      pred.pts.slope = predict(adp.lm.slope, newdata = adp[pred.row,]))
adp.2019.bin = data.frame(Player = adp$Name[pred.row], Pos = adp$Pos[pred.row], 
                            ADP = as.numeric(adp$AverageDraftPosition[pred.row]),
                            pred.pts = predict(adp.lm, newdata = adp[pred.row,]))

adp.2019 = merge(adp.2019.slope,adp.2019.bin, by = c("Player","Pos","ADP"))
write.csv(adp.2019, "fit2019.csv", row.names = FALSE)

library(ggplot2)
library(plyr)
ddply(adp[which(adp$year <= 2017),], .(Pos, year), summarise, "corr" = cor(adp.rank, pos.rank, method = "spearman"))

ggplot(data = adp[which(adp$year <= 2017),]) + geom_point(aes(y = pos.rank, x = adp.rank, color = Pos), size = 3, alpha = .7) + facet_grid(year~Pos, scales = "free")
ggplot(data = adp) + geom_histogram(aes(x = pos.scale, fill = Pos)) + facet_grid(Pos~., scales = "free_y")
